//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Evente_API.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class EventeEntities : DbContext
    {
        public EventeEntities()
            : base("name=EventeEntities")
        {
            this.Configuration.LazyLoadingEnabled = false;
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Drzava> Drzavas { get; set; }
        public virtual DbSet<Eventi> Eventis { get; set; }
        public virtual DbSet<EventiUcesnici> EventiUcesnicis { get; set; }
        public virtual DbSet<Grad> Grads { get; set; }
        public virtual DbSet<Karte> Kartes { get; set; }
        public virtual DbSet<Kategorije> Kategorijes { get; set; }
        public virtual DbSet<Korisnici> Korisnicis { get; set; }
        public virtual DbSet<KorisniciUloge> KorisniciUloges { get; set; }
        public virtual DbSet<Narudzbe> Narudzbes { get; set; }
        public virtual DbSet<Ocjene> Ocjenes { get; set; }
        public virtual DbSet<Organizatori> Organizatoris { get; set; }
        public virtual DbSet<Ucesnici> Ucesnicis { get; set; }
        public virtual DbSet<Uloge> Uloges { get; set; }
        public virtual DbSet<Klasa> Klasas { get; set; }
        public virtual DbSet<NarudzbaStavke> NarudzbaStavkes { get; set; }
    
        public virtual ObjectResult<Korisnici_Result> esp_Korisnici_SelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Korisnici_Result>("esp_Korisnici_SelectAll");
        }
    
        public virtual ObjectResult<Korisnici_Result> esp_Korisnici_SelectByImePrezime(string imePrezime)
        {
            var imePrezimeParameter = imePrezime != null ?
                new ObjectParameter("ImePrezime", imePrezime) :
                new ObjectParameter("ImePrezime", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Korisnici_Result>("esp_Korisnici_SelectByImePrezime", imePrezimeParameter);
        }
    
        public virtual ObjectResult<Grad_Result> esp_Grad_SelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Grad_Result>("esp_Grad_SelectAll");
        }
    
        public virtual ObjectResult<Drzava> esp_Drzava_SelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Drzava>("esp_Drzava_SelectAll");
        }
    
        public virtual ObjectResult<Drzava> esp_Drzava_SelectAll(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Drzava>("esp_Drzava_SelectAll", mergeOption);
        }
    
        public virtual int esp_Korisnici_Update(Nullable<int> korisnikId, string ime, string prezime, string email, string telefon, string korisnickoIme, string lozinkaSalt, string lozinkaHash, Nullable<bool> status, Nullable<int> gradId, string adresa, byte[] slika, byte[] slikaThumb)
        {
            var korisnikIdParameter = korisnikId.HasValue ?
                new ObjectParameter("KorisnikId", korisnikId) :
                new ObjectParameter("KorisnikId", typeof(int));
    
            var imeParameter = ime != null ?
                new ObjectParameter("Ime", ime) :
                new ObjectParameter("Ime", typeof(string));
    
            var prezimeParameter = prezime != null ?
                new ObjectParameter("Prezime", prezime) :
                new ObjectParameter("Prezime", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var telefonParameter = telefon != null ?
                new ObjectParameter("Telefon", telefon) :
                new ObjectParameter("Telefon", typeof(string));
    
            var korisnickoImeParameter = korisnickoIme != null ?
                new ObjectParameter("KorisnickoIme", korisnickoIme) :
                new ObjectParameter("KorisnickoIme", typeof(string));
    
            var lozinkaSaltParameter = lozinkaSalt != null ?
                new ObjectParameter("LozinkaSalt", lozinkaSalt) :
                new ObjectParameter("LozinkaSalt", typeof(string));
    
            var lozinkaHashParameter = lozinkaHash != null ?
                new ObjectParameter("LozinkaHash", lozinkaHash) :
                new ObjectParameter("LozinkaHash", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(bool));
    
            var gradIdParameter = gradId.HasValue ?
                new ObjectParameter("GradId", gradId) :
                new ObjectParameter("GradId", typeof(int));
    
            var adresaParameter = adresa != null ?
                new ObjectParameter("Adresa", adresa) :
                new ObjectParameter("Adresa", typeof(string));
    
            var slikaParameter = slika != null ?
                new ObjectParameter("Slika", slika) :
                new ObjectParameter("Slika", typeof(byte[]));
    
            var slikaThumbParameter = slikaThumb != null ?
                new ObjectParameter("SlikaThumb", slikaThumb) :
                new ObjectParameter("SlikaThumb", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_Korisnici_Update", korisnikIdParameter, imeParameter, prezimeParameter, emailParameter, telefonParameter, korisnickoImeParameter, lozinkaSaltParameter, lozinkaHashParameter, statusParameter, gradIdParameter, adresaParameter, slikaParameter, slikaThumbParameter);
        }
    
        public virtual int esp_KorisniciUloge_Insert(Nullable<int> korisnikId, Nullable<int> ulogaId)
        {
            var korisnikIdParameter = korisnikId.HasValue ?
                new ObjectParameter("KorisnikId", korisnikId) :
                new ObjectParameter("KorisnikId", typeof(int));
    
            var ulogaIdParameter = ulogaId.HasValue ?
                new ObjectParameter("UlogaId", ulogaId) :
                new ObjectParameter("UlogaId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_KorisniciUloge_Insert", korisnikIdParameter, ulogaIdParameter);
        }
    
        public virtual ObjectResult<Uloge> esp_Uloge_SelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Uloge>("esp_Uloge_SelectAll");
        }
    
        public virtual ObjectResult<Uloge> esp_Uloge_SelectAll(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Uloge>("esp_Uloge_SelectAll", mergeOption);
        }
    
        public virtual int esp_Korisnici_Delete(Nullable<int> korisnikId)
        {
            var korisnikIdParameter = korisnikId.HasValue ?
                new ObjectParameter("KorisnikId", korisnikId) :
                new ObjectParameter("KorisnikId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_Korisnici_Delete", korisnikIdParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> esp_Korisnici_Insert(string ime, string prezime, string email, string telefon, string korisnickoIme, string lozinkaSalt, string lozinkaHash, Nullable<bool> status, string adresa, Nullable<int> gradId, byte[] slika, byte[] slikaThumb)
        {
            var imeParameter = ime != null ?
                new ObjectParameter("Ime", ime) :
                new ObjectParameter("Ime", typeof(string));
    
            var prezimeParameter = prezime != null ?
                new ObjectParameter("Prezime", prezime) :
                new ObjectParameter("Prezime", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var telefonParameter = telefon != null ?
                new ObjectParameter("Telefon", telefon) :
                new ObjectParameter("Telefon", typeof(string));
    
            var korisnickoImeParameter = korisnickoIme != null ?
                new ObjectParameter("KorisnickoIme", korisnickoIme) :
                new ObjectParameter("KorisnickoIme", typeof(string));
    
            var lozinkaSaltParameter = lozinkaSalt != null ?
                new ObjectParameter("LozinkaSalt", lozinkaSalt) :
                new ObjectParameter("LozinkaSalt", typeof(string));
    
            var lozinkaHashParameter = lozinkaHash != null ?
                new ObjectParameter("LozinkaHash", lozinkaHash) :
                new ObjectParameter("LozinkaHash", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(bool));
    
            var adresaParameter = adresa != null ?
                new ObjectParameter("Adresa", adresa) :
                new ObjectParameter("Adresa", typeof(string));
    
            var gradIdParameter = gradId.HasValue ?
                new ObjectParameter("GradId", gradId) :
                new ObjectParameter("GradId", typeof(int));
    
            var slikaParameter = slika != null ?
                new ObjectParameter("Slika", slika) :
                new ObjectParameter("Slika", typeof(byte[]));
    
            var slikaThumbParameter = slikaThumb != null ?
                new ObjectParameter("SlikaThumb", slikaThumb) :
                new ObjectParameter("SlikaThumb", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("esp_Korisnici_Insert", imeParameter, prezimeParameter, emailParameter, telefonParameter, korisnickoImeParameter, lozinkaSaltParameter, lozinkaHashParameter, statusParameter, adresaParameter, gradIdParameter, slikaParameter, slikaThumbParameter);
        }
    
        public virtual ObjectResult<Organizatori> esp_Organizatori_SelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Organizatori>("esp_Organizatori_SelectAll");
        }
    
        public virtual ObjectResult<Organizatori> esp_Organizatori_SelectAll(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Organizatori>("esp_Organizatori_SelectAll", mergeOption);
        }
    
        public virtual ObjectResult<Organizatori_Result> esp_Organizatori_BasicSelect()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Organizatori_Result>("esp_Organizatori_BasicSelect");
        }
    
        public virtual ObjectResult<Kategorije> esp_Kategorija_SelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Kategorije>("esp_Kategorija_SelectAll");
        }
    
        public virtual ObjectResult<Kategorije> esp_Kategorija_SelectAll(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Kategorije>("esp_Kategorija_SelectAll", mergeOption);
        }
    
        public virtual ObjectResult<Ucesnici> esp_Ucesnici_SelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Ucesnici>("esp_Ucesnici_SelectAll");
        }
    
        public virtual ObjectResult<Ucesnici> esp_Ucesnici_SelectAll(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Ucesnici>("esp_Ucesnici_SelectAll", mergeOption);
        }
    
        public virtual ObjectResult<Eventi> esp_Eventi_SelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Eventi>("esp_Eventi_SelectAll");
        }
    
        public virtual ObjectResult<Eventi> esp_Eventi_SelectAll(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Eventi>("esp_Eventi_SelectAll", mergeOption);
        }
    
        public virtual ObjectResult<Nullable<decimal>> esp_Eventi_Insert(string naziv, string opis, Nullable<int> minimumGodine, string objekatOdrzavanja, string adresa, Nullable<int> organizatorId, Nullable<int> kategorijaId, Nullable<int> gradId, byte[] slika, byte[] slikaThumb, Nullable<System.DateTime> datumOdrzavanja, Nullable<bool> status)
        {
            var nazivParameter = naziv != null ?
                new ObjectParameter("Naziv", naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var opisParameter = opis != null ?
                new ObjectParameter("Opis", opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var minimumGodineParameter = minimumGodine.HasValue ?
                new ObjectParameter("MinimumGodine", minimumGodine) :
                new ObjectParameter("MinimumGodine", typeof(int));
    
            var objekatOdrzavanjaParameter = objekatOdrzavanja != null ?
                new ObjectParameter("ObjekatOdrzavanja", objekatOdrzavanja) :
                new ObjectParameter("ObjekatOdrzavanja", typeof(string));
    
            var adresaParameter = adresa != null ?
                new ObjectParameter("Adresa", adresa) :
                new ObjectParameter("Adresa", typeof(string));
    
            var organizatorIdParameter = organizatorId.HasValue ?
                new ObjectParameter("OrganizatorId", organizatorId) :
                new ObjectParameter("OrganizatorId", typeof(int));
    
            var kategorijaIdParameter = kategorijaId.HasValue ?
                new ObjectParameter("KategorijaId", kategorijaId) :
                new ObjectParameter("KategorijaId", typeof(int));
    
            var gradIdParameter = gradId.HasValue ?
                new ObjectParameter("GradId", gradId) :
                new ObjectParameter("GradId", typeof(int));
    
            var slikaParameter = slika != null ?
                new ObjectParameter("Slika", slika) :
                new ObjectParameter("Slika", typeof(byte[]));
    
            var slikaThumbParameter = slikaThumb != null ?
                new ObjectParameter("SlikaThumb", slikaThumb) :
                new ObjectParameter("SlikaThumb", typeof(byte[]));
    
            var datumOdrzavanjaParameter = datumOdrzavanja.HasValue ?
                new ObjectParameter("DatumOdrzavanja", datumOdrzavanja) :
                new ObjectParameter("DatumOdrzavanja", typeof(System.DateTime));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("esp_Eventi_Insert", nazivParameter, opisParameter, minimumGodineParameter, objekatOdrzavanjaParameter, adresaParameter, organizatorIdParameter, kategorijaIdParameter, gradIdParameter, slikaParameter, slikaThumbParameter, datumOdrzavanjaParameter, statusParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> esp_EventiUcesnici_Insert(Nullable<int> eventiId, Nullable<int> ucesnikId)
        {
            var eventiIdParameter = eventiId.HasValue ?
                new ObjectParameter("EventiId", eventiId) :
                new ObjectParameter("EventiId", typeof(int));
    
            var ucesnikIdParameter = ucesnikId.HasValue ?
                new ObjectParameter("UcesnikId", ucesnikId) :
                new ObjectParameter("UcesnikId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("esp_EventiUcesnici_Insert", eventiIdParameter, ucesnikIdParameter);
        }
    
        public virtual ObjectResult<Eventi_Result> esp_Eventi_BasicSelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Eventi_Result>("esp_Eventi_BasicSelectAll");
        }
    
        public virtual ObjectResult<Eventi_SearchResult> esp_Eventi_SelectByNaziv(string naziv)
        {
            var nazivParameter = naziv != null ?
                new ObjectParameter("Naziv", naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Eventi_SearchResult>("esp_Eventi_SelectByNaziv", nazivParameter);
        }
    
        public virtual int esp_Eventi_Delete(Nullable<int> eventId)
        {
            var eventIdParameter = eventId.HasValue ?
                new ObjectParameter("EventId", eventId) :
                new ObjectParameter("EventId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_Eventi_Delete", eventIdParameter);
        }
    
        public virtual int esp_Eventi_Update(Nullable<int> eventId, string naziv, Nullable<int> minimumGodine, string objekatOdrazavanja, string opis, string adresa, Nullable<System.DateTime> datumOdrzavanja, Nullable<bool> status, byte[] slika, byte[] slikaThumb, Nullable<int> organizatorId, Nullable<int> kategorijaId, Nullable<int> gradId)
        {
            var eventIdParameter = eventId.HasValue ?
                new ObjectParameter("EventId", eventId) :
                new ObjectParameter("EventId", typeof(int));
    
            var nazivParameter = naziv != null ?
                new ObjectParameter("Naziv", naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var minimumGodineParameter = minimumGodine.HasValue ?
                new ObjectParameter("MinimumGodine", minimumGodine) :
                new ObjectParameter("MinimumGodine", typeof(int));
    
            var objekatOdrazavanjaParameter = objekatOdrazavanja != null ?
                new ObjectParameter("ObjekatOdrazavanja", objekatOdrazavanja) :
                new ObjectParameter("ObjekatOdrazavanja", typeof(string));
    
            var opisParameter = opis != null ?
                new ObjectParameter("Opis", opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var adresaParameter = adresa != null ?
                new ObjectParameter("Adresa", adresa) :
                new ObjectParameter("Adresa", typeof(string));
    
            var datumOdrzavanjaParameter = datumOdrzavanja.HasValue ?
                new ObjectParameter("DatumOdrzavanja", datumOdrzavanja) :
                new ObjectParameter("DatumOdrzavanja", typeof(System.DateTime));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(bool));
    
            var slikaParameter = slika != null ?
                new ObjectParameter("Slika", slika) :
                new ObjectParameter("Slika", typeof(byte[]));
    
            var slikaThumbParameter = slikaThumb != null ?
                new ObjectParameter("SlikaThumb", slikaThumb) :
                new ObjectParameter("SlikaThumb", typeof(byte[]));
    
            var organizatorIdParameter = organizatorId.HasValue ?
                new ObjectParameter("OrganizatorId", organizatorId) :
                new ObjectParameter("OrganizatorId", typeof(int));
    
            var kategorijaIdParameter = kategorijaId.HasValue ?
                new ObjectParameter("KategorijaId", kategorijaId) :
                new ObjectParameter("KategorijaId", typeof(int));
    
            var gradIdParameter = gradId.HasValue ?
                new ObjectParameter("GradId", gradId) :
                new ObjectParameter("GradId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_Eventi_Update", eventIdParameter, nazivParameter, minimumGodineParameter, objekatOdrazavanjaParameter, opisParameter, adresaParameter, datumOdrzavanjaParameter, statusParameter, slikaParameter, slikaThumbParameter, organizatorIdParameter, kategorijaIdParameter, gradIdParameter);
        }
    
        public virtual ObjectResult<EventiUcesnici_SearchResult> esp_EventiUcesnici_SelectByEventUcesnik(Nullable<int> eventId, Nullable<int> ucesnikId)
        {
            var eventIdParameter = eventId.HasValue ?
                new ObjectParameter("EventId", eventId) :
                new ObjectParameter("EventId", typeof(int));
    
            var ucesnikIdParameter = ucesnikId.HasValue ?
                new ObjectParameter("UcesnikId", ucesnikId) :
                new ObjectParameter("UcesnikId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EventiUcesnici_SearchResult>("esp_EventiUcesnici_SelectByEventUcesnik", eventIdParameter, ucesnikIdParameter);
        }
    
        public virtual int esp_EventiUcesnici_Delete(Nullable<int> eventiId, Nullable<int> ucesnikId)
        {
            var eventiIdParameter = eventiId.HasValue ?
                new ObjectParameter("EventiId", eventiId) :
                new ObjectParameter("EventiId", typeof(int));
    
            var ucesnikIdParameter = ucesnikId.HasValue ?
                new ObjectParameter("UcesnikId", ucesnikId) :
                new ObjectParameter("UcesnikId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_EventiUcesnici_Delete", eventiIdParameter, ucesnikIdParameter);
        }
    
        public virtual ObjectResult<Karte_SearchResult> esp_Karte_SelectByEventKlasa(Nullable<int> eventId, string klasaId)
        {
            var eventIdParameter = eventId.HasValue ?
                new ObjectParameter("EventId", eventId) :
                new ObjectParameter("EventId", typeof(int));
    
            var klasaIdParameter = klasaId != null ?
                new ObjectParameter("KlasaId", klasaId) :
                new ObjectParameter("KlasaId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Karte_SearchResult>("esp_Karte_SelectByEventKlasa", eventIdParameter, klasaIdParameter);
        }
    
        public virtual int esp_Karte_Delete(Nullable<int> karteId)
        {
            var karteIdParameter = karteId.HasValue ?
                new ObjectParameter("KarteId", karteId) :
                new ObjectParameter("KarteId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_Karte_Delete", karteIdParameter);
        }
    
        public virtual ObjectResult<Korisnici_LoginResult> esp_Korisnici_LoginSelect(string username)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Korisnici_LoginResult>("esp_Korisnici_LoginSelect", usernameParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> esp_Korisnici_SimpleInsert(string ime, string prezime, string email, string korisnickoIme, string lozinkaSalt, string lozinkaHash)
        {
            var imeParameter = ime != null ?
                new ObjectParameter("Ime", ime) :
                new ObjectParameter("Ime", typeof(string));
    
            var prezimeParameter = prezime != null ?
                new ObjectParameter("Prezime", prezime) :
                new ObjectParameter("Prezime", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var korisnickoImeParameter = korisnickoIme != null ?
                new ObjectParameter("KorisnickoIme", korisnickoIme) :
                new ObjectParameter("KorisnickoIme", typeof(string));
    
            var lozinkaSaltParameter = lozinkaSalt != null ?
                new ObjectParameter("LozinkaSalt", lozinkaSalt) :
                new ObjectParameter("LozinkaSalt", typeof(string));
    
            var lozinkaHashParameter = lozinkaHash != null ?
                new ObjectParameter("LozinkaHash", lozinkaHash) :
                new ObjectParameter("LozinkaHash", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("esp_Korisnici_SimpleInsert", imeParameter, prezimeParameter, emailParameter, korisnickoImeParameter, lozinkaSaltParameter, lozinkaHashParameter);
        }
    
        public virtual ObjectResult<Eventi_SelectByVrsta> esp_Eventi_SelectByVrsta(Nullable<int> vrstaId)
        {
            var vrstaIdParameter = vrstaId.HasValue ?
                new ObjectParameter("VrstaId", vrstaId) :
                new ObjectParameter("VrstaId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Eventi_SelectByVrsta>("esp_Eventi_SelectByVrsta", vrstaIdParameter);
        }
    
        public virtual ObjectResult<Eventi_DetailsResult> esp_Eventi_Details(Nullable<int> eventId)
        {
            var eventIdParameter = eventId.HasValue ?
                new ObjectParameter("EventId", eventId) :
                new ObjectParameter("EventId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Eventi_DetailsResult>("esp_Eventi_Details", eventIdParameter);
        }
    
        public virtual ObjectResult<Karte_KategorijaResult> esp_Eventi_Karte(Nullable<int> eventId)
        {
            var eventIdParameter = eventId.HasValue ?
                new ObjectParameter("EventId", eventId) :
                new ObjectParameter("EventId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Karte_KategorijaResult>("esp_Eventi_Karte", eventIdParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> esp_Narudzbe_Insert(string brojNarudzbe, Nullable<System.DateTime> datum, Nullable<int> korisnikId)
        {
            var brojNarudzbeParameter = brojNarudzbe != null ?
                new ObjectParameter("BrojNarudzbe", brojNarudzbe) :
                new ObjectParameter("BrojNarudzbe", typeof(string));
    
            var datumParameter = datum.HasValue ?
                new ObjectParameter("Datum", datum) :
                new ObjectParameter("Datum", typeof(System.DateTime));
    
            var korisnikIdParameter = korisnikId.HasValue ?
                new ObjectParameter("KorisnikId", korisnikId) :
                new ObjectParameter("KorisnikId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("esp_Narudzbe_Insert", brojNarudzbeParameter, datumParameter, korisnikIdParameter);
        }
    
        public virtual int esp_NarudzbeStavke_Insert(Nullable<int> brojKarata, Nullable<int> karteId, Nullable<int> narudzbaId)
        {
            var brojKarataParameter = brojKarata.HasValue ?
                new ObjectParameter("BrojKarata", brojKarata) :
                new ObjectParameter("BrojKarata", typeof(int));
    
            var karteIdParameter = karteId.HasValue ?
                new ObjectParameter("KarteId", karteId) :
                new ObjectParameter("KarteId", typeof(int));
    
            var narudzbaIdParameter = narudzbaId.HasValue ?
                new ObjectParameter("NarudzbaId", narudzbaId) :
                new ObjectParameter("NarudzbaId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_NarudzbeStavke_Insert", brojKarataParameter, karteIdParameter, narudzbaIdParameter);
        }
    
        public virtual ObjectResult<Report_KarteOrders> esp_Report_KarteOrders(string brojNarudzbe)
        {
            var brojNarudzbeParameter = brojNarudzbe != null ?
                new ObjectParameter("BrojNarudzbe", brojNarudzbe) :
                new ObjectParameter("BrojNarudzbe", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Report_KarteOrders>("esp_Report_KarteOrders", brojNarudzbeParameter);
        }
    
        public virtual ObjectResult<Karte_Korisnici_Kupljene> esp_Karte_Korisnici_Kupljene(Nullable<int> korisnikId)
        {
            var korisnikIdParameter = korisnikId.HasValue ?
                new ObjectParameter("KorisnikId", korisnikId) :
                new ObjectParameter("KorisnikId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Karte_Korisnici_Kupljene>("esp_Karte_Korisnici_Kupljene", korisnikIdParameter);
        }
    
        public virtual ObjectResult<Korisnici_BasicInfo> esp_Korisnci_GetBasicInfo(Nullable<int> korisnikId)
        {
            var korisnikIdParameter = korisnikId.HasValue ?
                new ObjectParameter("KorisnikId", korisnikId) :
                new ObjectParameter("KorisnikId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Korisnici_BasicInfo>("esp_Korisnci_GetBasicInfo", korisnikIdParameter);
        }
    
        public virtual ObjectResult<Eventi_Report> esp_Eventi_Report(Nullable<int> danOD, Nullable<int> mjesecOD, Nullable<int> godinaOD, Nullable<int> danDO, Nullable<int> mjesecDO, Nullable<int> godinaDO)
        {
            var danODParameter = danOD.HasValue ?
                new ObjectParameter("DanOD", danOD) :
                new ObjectParameter("DanOD", typeof(int));
    
            var mjesecODParameter = mjesecOD.HasValue ?
                new ObjectParameter("MjesecOD", mjesecOD) :
                new ObjectParameter("MjesecOD", typeof(int));
    
            var godinaODParameter = godinaOD.HasValue ?
                new ObjectParameter("GodinaOD", godinaOD) :
                new ObjectParameter("GodinaOD", typeof(int));
    
            var danDOParameter = danDO.HasValue ?
                new ObjectParameter("DanDO", danDO) :
                new ObjectParameter("DanDO", typeof(int));
    
            var mjesecDOParameter = mjesecDO.HasValue ?
                new ObjectParameter("MjesecDO", mjesecDO) :
                new ObjectParameter("MjesecDO", typeof(int));
    
            var godinaDOParameter = godinaDO.HasValue ?
                new ObjectParameter("GodinaDO", godinaDO) :
                new ObjectParameter("GodinaDO", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Eventi_Report>("esp_Eventi_Report", danODParameter, mjesecODParameter, godinaODParameter, danDOParameter, mjesecDOParameter, godinaDOParameter);
        }
    
        public virtual ObjectResult<Eventi_Report> esp_Eventi_SifraReport(string sifra)
        {
            var sifraParameter = sifra != null ?
                new ObjectParameter("Sifra", sifra) :
                new ObjectParameter("Sifra", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Eventi_Report>("esp_Eventi_SifraReport", sifraParameter);
        }
    
        public virtual int esp_Ocjena_Insert(Nullable<int> ocjena, Nullable<int> eventId, Nullable<int> korisnikId)
        {
            var ocjenaParameter = ocjena.HasValue ?
                new ObjectParameter("Ocjena", ocjena) :
                new ObjectParameter("Ocjena", typeof(int));
    
            var eventIdParameter = eventId.HasValue ?
                new ObjectParameter("EventId", eventId) :
                new ObjectParameter("EventId", typeof(int));
    
            var korisnikIdParameter = korisnikId.HasValue ?
                new ObjectParameter("KorisnikId", korisnikId) :
                new ObjectParameter("KorisnikId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_Ocjena_Insert", ocjenaParameter, eventIdParameter, korisnikIdParameter);
        }
    
        public virtual ObjectResult<Kategorije_Omiljena> esp_Kategorije_Omiljena(Nullable<int> korisnikId)
        {
            var korisnikIdParameter = korisnikId.HasValue ?
                new ObjectParameter("KorisnikId", korisnikId) :
                new ObjectParameter("KorisnikId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Kategorije_Omiljena>("esp_Kategorije_Omiljena", korisnikIdParameter);
        }
    
        public virtual ObjectResult<Eventi_Result> esp_Eventi_Kategorija_NeKupljeni(Nullable<int> korisnikId, string kategorija)
        {
            var korisnikIdParameter = korisnikId.HasValue ?
                new ObjectParameter("KorisnikId", korisnikId) :
                new ObjectParameter("KorisnikId", typeof(int));
    
            var kategorijaParameter = kategorija != null ?
                new ObjectParameter("Kategorija", kategorija) :
                new ObjectParameter("Kategorija", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Eventi_Result>("esp_Eventi_Kategorija_NeKupljeni", korisnikIdParameter, kategorijaParameter);
        }
    
        public virtual ObjectResult<Nullable<double>> esp_Ocjene_Event_Prosjecna(Nullable<int> eventId)
        {
            var eventIdParameter = eventId.HasValue ?
                new ObjectParameter("EventId", eventId) :
                new ObjectParameter("EventId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<double>>("esp_Ocjene_Event_Prosjecna", eventIdParameter);
        }
    
        public virtual ObjectResult<Eventi_Preporuceni> esp_Eventi_Preporuceni(Nullable<int> eventId)
        {
            var eventIdParameter = eventId.HasValue ?
                new ObjectParameter("EventId", eventId) :
                new ObjectParameter("EventId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Eventi_Preporuceni>("esp_Eventi_Preporuceni", eventIdParameter);
        }
    
        public virtual ObjectResult<Eventi_Preporuceni> esp_Eventi_PreporuceniBezKategorije(Nullable<int> korisnikId)
        {
            var korisnikIdParameter = korisnikId.HasValue ?
                new ObjectParameter("KorisnikId", korisnikId) :
                new ObjectParameter("KorisnikId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Eventi_Preporuceni>("esp_Eventi_PreporuceniBezKategorije", korisnikIdParameter);
        }
    }
}
